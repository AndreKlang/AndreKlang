<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://andreklang.github.io//AndreKlang/feed.xml" rel="self" type="application/atom+xml" /><link href="https://andreklang.github.io//AndreKlang/" rel="alternate" type="text/html" /><updated>2020-05-05T18:33:15+02:00</updated><id>https://andreklang.github.io//AndreKlang/feed.xml</id><title type="html">Ramblings of Andre Klang</title><subtitle>Just random rambligs</subtitle><author><name>Andre Klang</name></author><entry><title type="html">Damascus knife</title><link href="https://andreklang.github.io//AndreKlang/blacksmithing/2020/04/29/damascus-knifes.html" rel="alternate" type="text/html" title="Damascus knife" /><published>2020-04-29T17:56:38+02:00</published><updated>2020-04-29T17:56:38+02:00</updated><id>https://andreklang.github.io//AndreKlang/blacksmithing/2020/04/29/damascus-knifes</id><content type="html" xml:base="https://andreklang.github.io//AndreKlang/blacksmithing/2020/04/29/damascus-knifes.html"></content><author><name>Andre Klang</name></author><category term="knife" /><category term="damascus" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://lh3.googleusercontent.com/iQWl6mAuGQmVGz6yB2r0G6eoMb5J7L5_lmpXESPCMIDTVTe6yeuemzk_ibRjI_wXemb6p8rASYCzDA0h19H44BZR4GL9wXUfkzH4rdWvgSMQW0yWmZpCqiWFZ346Dso6r-iHMMw5gg" /><media:content medium="image" url="https://lh3.googleusercontent.com/iQWl6mAuGQmVGz6yB2r0G6eoMb5J7L5_lmpXESPCMIDTVTe6yeuemzk_ibRjI_wXemb6p8rASYCzDA0h19H44BZR4GL9wXUfkzH4rdWvgSMQW0yWmZpCqiWFZ346Dso6r-iHMMw5gg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Set the theme in Chrome to match your website</title><link href="https://andreklang.github.io//AndreKlang/set-the-theme-in-chrome-to-match-your-website/" rel="alternate" type="text/html" title="Set the theme in Chrome to match your website" /><published>2016-03-07T11:54:32+01:00</published><updated>2016-03-07T11:54:32+01:00</updated><id>https://andreklang.github.io//AndreKlang/set-the-theme-in-chrome-to-match-your-website</id><content type="html" xml:base="https://andreklang.github.io//AndreKlang/set-the-theme-in-chrome-to-match-your-website/">&lt;p&gt;For quite some time it’s been possible to set the color theme in Chrome for Android to match your sites main color. However, it’s not been widely adopted until a month or two ago, when I stared to see matching theme in my chrome, and kind of liked it.&lt;/p&gt;

&lt;p&gt;So I hit my friend Google with the question,, and it wasn’t that easy to find actually, a lot of nonsense results. Until I found the source: &lt;a href=&quot;https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android&quot; target=&quot;_blank&quot;&gt;Original post from Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So it turns out it’s very easy to set the theme, just include a meta-tag with the HEX of your color, like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;theme-color&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#db5945&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(I’ll add a pretty screenshot later..)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I found additional info as well regarding &lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/browser-customization/theme-color&quot; target=&quot;_blank&quot;&gt;the similar thing in Apples Safari&lt;/a&gt;&lt;/p&gt;</content><author><name>Andre Klang</name></author><category term="frontend" /><summary type="html">For quite some time it’s been possible to set the color theme in Chrome for Android to match your sites main color. However, it’s not been widely adopted until a month or two ago, when I stared to see matching theme in my chrome, and kind of liked it.</summary></entry><entry><title type="html">Truncate texts in a pretty way</title><link href="https://andreklang.github.io//AndreKlang/truncate-texts-in-a-pretty-way/" rel="alternate" type="text/html" title="Truncate texts in a pretty way" /><published>2016-03-01T10:21:32+01:00</published><updated>2016-03-01T10:21:32+01:00</updated><id>https://andreklang.github.io//AndreKlang/truncate-texts-in-a-pretty-way</id><content type="html" xml:base="https://andreklang.github.io//AndreKlang/truncate-texts-in-a-pretty-way/">&lt;p&gt;Text-overflow: ellipsis truncates the overflowing text, and adds ‘…’ at the end. And it is responsive, so it will always look nice:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ellipsis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://jsfiddle.net/6yrw244h/&quot; target=&quot;_blank&quot;&gt;Try it in JSFiddle&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;//jsfiddle.net/6yrw244h/embed/html,css,result/dark/&quot; async=&quot;&quot;&gt;&lt;/script&gt;</content><author><name>Andre Klang</name></author><category term="frontend" /><summary type="html">Text-overflow: ellipsis truncates the overflowing text, and adds ‘…’ at the end. And it is responsive, so it will always look nice:</summary></entry><entry><title type="html">Dealing with floats in PHP</title><link href="https://andreklang.github.io//AndreKlang/dealing-with-floats-in-php/" rel="alternate" type="text/html" title="Dealing with floats in PHP" /><published>2016-02-25T10:29:02+01:00</published><updated>2016-02-25T10:29:02+01:00</updated><id>https://andreklang.github.io//AndreKlang/dealing-with-floats</id><content type="html" xml:base="https://andreklang.github.io//AndreKlang/dealing-with-floats-in-php/">&lt;p&gt;As we all know, php does not have a good data type for decimals, so we’re stuck with floats. And let’s face it, they are not always so easy to deal with and to get the expected results.&lt;/p&gt;

&lt;p&gt;I recently needed to take a sum of money in a payment module, and convert it from dollars to cents, and send it as an integer to a webservice. Easy enough, but something came up..&lt;/p&gt;

&lt;h2 id=&quot;so-why-are-floats-difficult&quot;&gt;So why are floats difficult?&lt;/h2&gt;
&lt;p&gt;Well, it has to do with how they are stored in memory, I won’t get into it too deep (because I frankly don’t really know). But the short description, all values can’t be stored in an accurate representation. So it is stored “good enough”, or “as good as possible”.&lt;/p&gt;

&lt;p&gt;And what does that mean? For example the value from the tests below: “143.2” can’t be stored. So it is stored like this “143.19999999999998863”, and then whenever it is used it is rounded back to 143.2.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;It’s rounded back? Then whats the issue?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Glad you asked! The issue? Start doing calculations with it, you’ll start to see some funny problems.&lt;/p&gt;

&lt;p&gt;Study the example below, it’s fairly simple. We start with the value 143.2 and multiply that with 100. Result is quite simple 14320. This is not the interesting part, as I said, I needed to send it as an integer. So I did a simple typecast and I was done! To production the payment module went!&lt;/p&gt;

&lt;p&gt;Don’t you hate it when someone reports “wierd” bugs on your stuff..&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The order total is one cent wrong! What the f?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lets try that out..&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;143.2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// int(14319)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;14319!?! WHAT!?!&lt;/p&gt;

&lt;p&gt;Well,, simple answer.. As I said, do some calculations with a float:&lt;/p&gt;
&lt;pre&gt;143.19999999999998863 * 100 = 14319.999999999998863&lt;/pre&gt;

&lt;h2 id=&quot;now-to-another-aspect-what-happens-when-we-cast-to-int&quot;&gt;Now to another aspect. What happens when we cast to int?&lt;/h2&gt;
&lt;p&gt;Well, anything that is not valid integer, is cut of.&lt;/p&gt;

&lt;p&gt;So take our example from above, remove anything that is no integer, and what do you get? 14319! Not the expected 14320..&lt;/p&gt;

&lt;h2 id=&quot;so-how-do-we-cast-that-to-an-int&quot;&gt;So how do we cast that to an int?&lt;/h2&gt;
&lt;p&gt;Well, I think I tried all possible solutions.. Rounding, intval, bc_math, and anything else I could think of. Until I started to think about why var_dump says the correct value when it is a float.&lt;/p&gt;

&lt;p&gt;Floats have some kind of “toString”-method, that fixes the rounding. But NOT a “toInteger”-method..&lt;/p&gt;

&lt;p&gt;So what if… We cast to string first, making use of “toString”, then cast that to integer. SUCCESS!&lt;/p&gt;

&lt;p&gt;See line 18 below.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AndreKlang/f20c55abbc22e2bc7c2c.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;result:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;Raw: --------------
float(143.2)
float(14320)

Cast: --------------
int(143)
int(14319)

Test: --------------
float(14320)
int(14319)
int(14319)
int(14320) &amp;lt;-- LINE 18: SUCCESS

Real values: -------
float(143.19999999999998863)
float(14319.999999999998181)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Andre Klang</name></author><category term="php" /><summary type="html">As we all know, php does not have a good data type for decimals, so we’re stuck with floats. And let’s face it, they are not always so easy to deal with and to get the expected results.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://lh3.googleusercontent.com/YVkzcnY82n_MvxFGG9BMynWQ7EnoKsSEiTpfTyDdcrJyiDkY6NRvKaHlGtJB-1VgBB9g6PiXYyB45lzPrETEA90yCWyfHZOKGaQ0XiTG6dPS9oET5vq8ojDxbUYESYdtIAc5fLq42A" /><media:content medium="image" url="https://lh3.googleusercontent.com/YVkzcnY82n_MvxFGG9BMynWQ7EnoKsSEiTpfTyDdcrJyiDkY6NRvKaHlGtJB-1VgBB9g6PiXYyB45lzPrETEA90yCWyfHZOKGaQ0XiTG6dPS9oET5vq8ojDxbUYESYdtIAc5fLq42A" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>